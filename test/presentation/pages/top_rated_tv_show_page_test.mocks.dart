// Mocks generated by Mockito 5.4.6 from annotations
// in ditonton/test/presentation/pages/top_rated_tv_show_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:ditonton/domain/usecases/get_top_rated_tv_show.dart' as _i2;
import 'package:ditonton/presentation/bloc/top_rated_tv_show_cubit.dart' as _i4;
import 'package:ditonton/presentation/bloc/top_rated_tv_show_state.dart' as _i3;
import 'package:flutter_bloc/flutter_bloc.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetTopRatedTvShow_0 extends _i1.SmartFake
    implements _i2.GetTopRatedTvShow {
  _FakeGetTopRatedTvShow_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTopRatedTvShowState_1 extends _i1.SmartFake
    implements _i3.TopRatedTvShowState {
  _FakeTopRatedTvShowState_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TopRatedTvShowCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockTopRatedTvShowCubit extends _i1.Mock
    implements _i4.TopRatedTvShowCubit {
  @override
  _i2.GetTopRatedTvShow get getTopRatedTvShow => (super.noSuchMethod(
        Invocation.getter(#getTopRatedTvShow),
        returnValue: _FakeGetTopRatedTvShow_0(
          this,
          Invocation.getter(#getTopRatedTvShow),
        ),
        returnValueForMissingStub: _FakeGetTopRatedTvShow_0(
          this,
          Invocation.getter(#getTopRatedTvShow),
        ),
      ) as _i2.GetTopRatedTvShow);

  @override
  _i3.TopRatedTvShowState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeTopRatedTvShowState_1(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeTopRatedTvShowState_1(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.TopRatedTvShowState);

  @override
  _i5.Stream<_i3.TopRatedTvShowState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i5.Stream<_i3.TopRatedTvShowState>.empty(),
        returnValueForMissingStub: _i5.Stream<_i3.TopRatedTvShowState>.empty(),
      ) as _i5.Stream<_i3.TopRatedTvShowState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i5.Future<void> fetchTopRatedTvShow() => (super.noSuchMethod(
        Invocation.method(
          #fetchTopRatedTvShow,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void emit(_i3.TopRatedTvShowState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChange(_i6.Change<_i3.TopRatedTvShowState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
